@page "/ViewZapReport"
@inject NavigationManager navigationManager
@inherits Classes.ZapBase
@inject IJSRuntime jsRunTime
@using Classes
@using Data;
@using Microsoft.AspNetCore.WebUtilities;

<div class="float-lg-right">
    <button class="btn" @onclick="CaptureScreenShot"><i class="oi oi-camera-slr"></i></button>
</div>

<h2>Detailed report</h2>
<div class="center">
    <h3>Summary or alerts</h3>
</div>

<div id="chartdiv"></div>

@if (!string.IsNullOrEmpty(AlertDetails))
{
    @((MarkupString)AlertDetails)
}
else
{
    <div class="center">
        <h3>There is no detailed reports available!</h3>
    </div>
}


@code{

    private string reportId { get; set; }

    [Parameter]
    public string AlertDetails { get; set; }

    protected override void OnInitialized()
    {
        var uri = navigationManager.ToAbsoluteUri(navigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("zapid", out var _zapid))
        {
            reportId = _zapid;
            AlertDetails = GetRawZapHTMLReport(_zapid);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var zapAlerts = new ZapAlerts().GetZapAlerts(reportId);
                await jsRunTime.InvokeVoidAsync("generateChartInValues", zapAlerts);
            }
            catch (Exception e)
            {
                Console.WriteLine(e.StackTrace.ToString());
            }
        }
    }

}

@functions {
    private void CaptureScreenShot()
    {
        FileUtil.SaveAs(jsRunTime, $"ZapReport_{DateTime.Now.ToString("ddMMyyyyHHmmss")}.jpg").ConfigureAwait(false);
    }
}